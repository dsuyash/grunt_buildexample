"use strict";var phonecatAnimations=angular.module("phonecatAnimations",["ngAnimate"]);phonecatAnimations.animation(".phone",function(){var animateUp=function(element,className,done){return"active"==className?(element.css({position:"absolute",top:500,left:0,display:"block"}),jQuery(element).animate({top:0},done),function(cancel){cancel&&element.stop()}):void 0},animateDown=function(element,className,done){return"active"==className?(element.css({position:"absolute",left:0,top:0}),jQuery(element).animate({top:-500},done),function(cancel){cancel&&element.stop()}):void 0};return{addClass:animateUp,removeClass:animateDown}});var phonecatApp=angular.module("phonecatApp",["ngRoute","phonecatAnimations","phonecatControllers","phonecatFilters","phonecatServices","gettext"]);phonecatApp.run(function(gettextCatalog){gettextCatalog.currentLanguage="bg"}),phonecatApp.config(["$routeProvider",function($routeProvider){$routeProvider.when("/phones",{templateUrl:"partials/phone-list.html",controller:"PhoneListCtrl"}).when("/phones/:phoneId",{templateUrl:"partials/phone-detail.html",controller:"PhoneDetailCtrl"}).otherwise({redirectTo:"/phones"})}]);var phonecatAnimations=angular.module("phonecatAnimations",["suyash"]);phonecatAnimations.animation(".phone",function(){var animateUp=function(element,className,done){return"active"==className?(element.css({position:"absolute",top:500,left:0,display:"block"}),jQuery(element).animate({top:0},done),function(cancel){cancel&&element.stop()}):void 0},animateDown=function(element,className,done){return"active"==className?(element.css({position:"absolute",left:0,top:0}),jQuery(element).animate({top:-500},done),function(cancel){cancel&&element.stop()}):void 0};return{addClass:animateUp,removeClass:animateDown}});var phonecatApp=angular.module("phonecatApp",["ngRoute","phonecatAnimations","phonecatControllers","phonecatFilters","phonecatServices","gettext"]);phonecatApp.run(function(gettextCatalog){gettextCatalog.currentLanguage="bg"}),phonecatApp.config(["$routeProvider",function($routeProvider){$routeProvider.when("/phones",{templateUrl:"partials/phone-list.html",controller:"PhoneListCtrl"}).when("/phones/:phoneId",{templateUrl:"partials/phone-detail.html",controller:"PhoneDetailCtrl"}).otherwise({redirectTo:"/phones"})}]);var phonecatAnimations=angular.module("phonecatAnimations",["ngAnimate"]);phonecatAnimations.animation(".phone",function(){var animateUp=function(element,className,done){return"active"==className?(element.css({position:"absolute",top:500,left:0,display:"block"}),jQuery(element).animate({top:0},done),function(cancel){cancel&&element.stop()}):void 0},animateDown=function(element,className,done){return"active"==className?(element.css({position:"absolute",left:0,top:0}),jQuery(element).animate({top:-500},done),function(cancel){cancel&&element.stop()}):void 0};return{addClass:animateUp,removeClass:animateDown}});var phonecatApp=angular.module("phonecatApp",["ngRoute","phonecatAnimations","phonecatControllers","phonecatFilters","phonecatServices","gettext"]);phonecatApp.run(function(gettextCatalog){gettextCatalog.currentLanguage="bg"}),phonecatApp.config(["$routeProvider",function($routeProvider){$routeProvider.when("/phones",{templateUrl:"partials/phone-list.html",controller:"PhoneListCtrl"}).when("/phones/:phoneId",{templateUrl:"partials/phone-detail.html",controller:"PhoneDetailCtrl"}).otherwise({redirectTo:"/phones"})}]);var phonecatAnimations=angular.module("phonecatAnimations",["ngAnimate"]);phonecatAnimations.animation(".phone",function(){var animateUp=function(element,className,done){return"active"==className?(element.css({position:"absolute",top:500,left:0,display:"block"}),jQuery(element).animate({top:0},done),function(cancel){cancel&&element.stop()}):void 0},animateDown=function(element,className,done){return"active"==className?(element.css({position:"absolute",left:0,top:0}),jQuery(element).animate({top:-500},done),function(cancel){cancel&&element.stop()}):void 0};return{addClass:animateUp,removeClass:animateDown}});var phonecatApp=angular.module("phonecatApp",["ngRoute","phonecatAnimations","phonecatControllers","phonecatFilters","phonecatServices","gettext"]);phonecatApp.run(function(gettextCatalog){gettextCatalog.currentLanguage="bg"}),phonecatApp.config(["$routeProvider",function($routeProvider){$routeProvider.when("/phones",{templateUrl:"partials/phone-list.html",controller:"PhoneListCtrl"}).when("/phones/:phoneId",{templateUrl:"partials/phone-detail.html",controller:"PhoneDetailCtrl"}).otherwise({redirectTo:"/phones"})}]);var phonecatControllers=angular.module("phonecatControllers",[]);phonecatControllers.controller("PhoneListCtrl",["$scope","Phone",function($scope,Phone,gettextCatalog){$scope.phones=Phone.query(),$scope.orderProp="age",$scope.gettextCatalog=gettextCatalog,$scope.languages={nl:"Nederlands",en:"English"}}]),phonecatControllers.controller("PhoneDetailCtrl",["$scope","$routeParams","Phone",function($scope,$routeParams,Phone){$scope.phone=Phone.get({phoneId:$routeParams.phoneId},function(phone){$scope.mainImageUrl=phone.images[0]}),$scope.setImage=function(imageUrl){$scope.mainImageUrl=imageUrl}}]),angular.module("phonecatFilters",[]).filter("checkmark",function(){return function(input){return input?"✓":"✘"}});var phonecatServices=angular.module("phonecatServices",["ngResource"]);phonecatServices.factory("Phone",["$resource",function($resource){return $resource("phones/:phoneId.json",{},{query:{method:"GET",params:{phoneId:"phones"},isArray:!0}})}]),angular.module("gettext").run(["gettextCatalog",function(gettextCatalog){gettextCatalog.setStrings("nl",{"Mark all as complete":"Markeer als afgewerkt","<strong>{{remainingCount}}</strong> item left":["<strong>{{remainingCount}}</strong> todo te gaan","<strong>{{remainingCount}}</strong> todos te gaan"],All:"Alle",Active:"Actief",Completed:"Afgewerkt","Clear completed ({{completedCount}})":"Wis afgewerkte taken ({{completedCount}})","Double-click to edit a todo":"Dubbelklik om een todo te bewerken","What needs to be done?":"Wat moet gedaan worden?"})}]);var phonecatControllers=angular.module("phonecatControllers",[]);phonecatControllers.controller("PhoneListCtrl",["$scope","Phone",function($scope,Phone,gettextCatalog){$scope.phones=Phone.query(),$scope.orderProp="age",$scope.gettextCatalog=gettextCatalog,$scope.languages={nl:"Nederlands",en:"English"}}]),phonecatControllers.controller("PhoneDetailCtrl",["$scope","$routeParams","Phone",function($scope,$routeParams,Phone){$scope.phone=Phone.get({phoneId:$routeParams.phoneId},function(phone){$scope.mainImageUrl=phone.images[0]}),$scope.setImage=function(imageUrl){$scope.mainImageUrl=imageUrl}}]),angular.module("phonecatFilters",[]).filter("checkmark",function(){return function(input){return input?"✓":"✘"}});var phonecatServices=angular.module("phonecatServices",["ngResource"]);phonecatServices.factory("Phone",["$resource",function($resource){return $resource("phones/:phoneId.json",{},{query:{method:"GET",params:{phoneId:"phones"},isArray:!0}})}]),angular.module("gettext").run(["gettextCatalog",function(gettextCatalog){gettextCatalog.setStrings("nl",{"Mark all as complete":"Markeer als afgewerkt","<strong>{{remainingCount}}</strong> item left":["<strong>{{remainingCount}}</strong> todo te gaan","<strong>{{remainingCount}}</strong> todos te gaan"],All:"Alle",Active:"Actief",Completed:"Afgewerkt","Clear completed ({{completedCount}})":"Wis afgewerkte taken ({{completedCount}})","Double-click to edit a todo":"Dubbelklik om een todo te bewerken","What needs to be done?":"Wat moet gedaan worden?"})}]);var phonecatControllers=angular.module("phonecatControllers",[]);phonecatControllers.controller("PhoneListCtrl",["$scope","Phone",function($scope,Phone,gettextCatalog){$scope.phones=Phone.query(),$scope.orderProp="age",$scope.gettextCatalog=gettextCatalog,$scope.languages={nl:"Nederlands",en:"English"}}]),phonecatControllers.controller("PhoneDetailCtrl",["$scope","$routeParams","Phone",function($scope,$routeParams,Phone){$scope.phone=Phone.get({phoneId:$routeParams.phoneId},function(phone){$scope.mainImageUrl=phone.images[0]}),$scope.setImage=function(imageUrl){$scope.mainImageUrl=imageUrl}}]),angular.module("phonecatFilters",[]).filter("checkmark",function(){return function(input){return input?"✓":"✘"}});var phonecatServices=angular.module("phonecatServices",["ngResource"]);phonecatServices.factory("Phone",["$resource",function($resource){return $resource("phones/:phoneId.json",{},{query:{method:"GET",params:{phoneId:"phones"},isArray:!0}})}]),angular.module("gettext").run(["gettextCatalog",function(gettextCatalog){gettextCatalog.setStrings("nl",{"Mark all as complete":"Markeer als afgewerkt","<strong>{{remainingCount}}</strong> item left":["<strong>{{remainingCount}}</strong> todo te gaan","<strong>{{remainingCount}}</strong> todos te gaan"],All:"Alle",Active:"Actief",Completed:"Afgewerkt","Clear completed ({{completedCount}})":"Wis afgewerkte taken ({{completedCount}})","Double-click to edit a todo":"Dubbelklik om een todo te bewerken","What needs to be done?":"Wat moet gedaan worden?"})}]);var phonecatControllers=angular.module("phonecatControllers",[]);phonecatControllers.controller("PhoneListCtrl",["$scope","Phone",function($scope,Phone,gettextCatalog){$scope.phones=Phone.query(),$scope.orderProp="age",$scope.gettextCatalog=gettextCatalog,$scope.languages={nl:"Nederlands",en:"English"}}]),phonecatControllers.controller("PhoneDetailCtrl",["$scope","$routeParams","Phone",function($scope,$routeParams,Phone){$scope.phone=Phone.get({phoneId:$routeParams.phoneId},function(phone){$scope.mainImageUrl=phone.images[0]}),$scope.setImage=function(imageUrl){$scope.mainImageUrl=imageUrl}}]),angular.module("phonecatFilters",[]).filter("checkmark",function(){return function(input){return input?"✓":"✘"}});var phonecatServices=angular.module("phonecatServices",["ngResource"]);phonecatServices.factory("Phone",["$resource",function($resource){return $resource("phones/:phoneId.json",{},{query:{method:"GET",params:{phoneId:"phones"},isArray:!0}})}]),angular.module("gettext").run(["gettextCatalog",function(gettextCatalog){gettextCatalog.setStrings("nl",{"Mark all as complete":"Markeer als afgewerkt","<strong>{{remainingCount}}</strong> item left":["<strong>{{remainingCount}}</strong> todo te gaan","<strong>{{remainingCount}}</strong> todos te gaan"],All:"Alle",Active:"Actief",Completed:"Afgewerkt","Clear completed ({{completedCount}})":"Wis afgewerkte taken ({{completedCount}})","Double-click to edit a todo":"Dubbelklik om een todo te bewerken","What needs to be done?":"Wat moet gedaan worden?"})}]);